using System;
using System.Collections.Generic;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace YoutubeExplode.Internal.Abstractions.Wrappers.Shared
{
    internal partial class PlayerResponse
    {
        private readonly JToken _root;

        public PlayerResponse(JToken root)
        {
            _root = root;
        }

        public string GetVideoAuthor() => _root.SelectToken("videoDetails.author").Value<string>();

        public string GetChannelId() => _root.SelectToken("videoDetails.channelId").Value<string>();

        public string GetVideoTitle() => _root.SelectToken("videoDetails.title").Value<string>();

        public TimeSpan GetVideoDuration()
        {
            var durationSeconds = _root.SelectToken("videoDetails.lengthSeconds").Value<double>();
            return TimeSpan.FromSeconds(durationSeconds);
        }

        public IReadOnlyList<string> GetVideoKeywords() => _root.SelectToken("videoDetails.keywords").EmptyIfNull().Values<string>().ToArray();

        public TimeSpan GetStreamInfoSetExpiresIn()
        {
            var expiresInSeconds = _root.SelectToken("streamingData.expiresInSeconds").Value<double>();
            return TimeSpan.FromSeconds(expiresInSeconds);
        }

        public IEnumerable<ClosedCaptionTrackInfo> GetClosedCaptionTrackInfos() =>
            _root.SelectToken("captions.playerCaptionsTracklistRenderer.captionTracks")
                .EmptyIfNull().Select(t => new ClosedCaptionTrackInfo(t));
    }

    internal partial class PlayerResponse
    {
        public class ClosedCaptionTrackInfo
        {
            private readonly JToken _root;

            public ClosedCaptionTrackInfo(JToken root)
            {
                _root = root;
            }

            public string GetUrl() => _root.SelectToken("baseUrl").Value<string>();

            public string GetLanguageCode() => _root.SelectToken("languageCode").Value<string>();

            public string GetLanguageName() => _root.SelectToken("name.simpleText").Value<string>();

            public bool GetIsAutoGenerated() =>
                _root.SelectToken("vssId").Value<string>().StartsWith("a.", StringComparison.OrdinalIgnoreCase);
        }
    }
}